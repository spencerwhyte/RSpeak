/* 
 * This class handles data relating to a question when it is submitted.
 * 
 * The tasks of this class are:
 * 1. Add the question to the local questions database.
 * 2. Send the question to the server to update the backend data model.
 * 
 */

package com.example.android_rspeak_v1.transactions;

import java.util.HashMap;

import org.json.JSONObject;

import com.example.android_rspeak_v1.database.HTTPRequest;
import com.example.android_rspeak_v1.database.HTTPRequestsDataSource;
import com.example.android_rspeak_v1.database.Question;
import com.example.android_rspeak_v1.database.QuestionsDataSource;

import android.content.Context;

public class AskQuestionTransaction 
{
	private Context context;
	
	public AskQuestionTransaction( Context context )
	{
		this.context = context;
	}
	
	public void beginQuestionTransaction( String question_content )
	{
		// first add the question to the database
		QuestionsDataSource questionSource = new QuestionsDataSource( context );
		questionSource.open();
		Question question = questionSource.createQuestion( question_content, System.currentTimeMillis(), true );
		questionSource.close();
		
		// then create the JSON object for the http request
		HashMap<String, String> params = new HashMap<String, String>();
	    params.put( HTTPRequest.DATA_DEVICE_ID, "-1");
	    params.put( HTTPRequest.DATA_QUESTION_ID, String.valueOf( question.getID() ));
	    params.put( HTTPRequest.DATA_CONTENT, question_content );
	    JSONObject request_data = new JSONObject(params);
		
		// then add the question request to the database
		HTTPRequestsDataSource requestSource = new HTTPRequestsDataSource( context );
		requestSource.open();
		requestSource.createRequest( HTTPRequest.Type.POST, "127.0.0.1", request_data.toString() );
		requestSource.close();
		
		// then try to send the request to the server
	}
}
