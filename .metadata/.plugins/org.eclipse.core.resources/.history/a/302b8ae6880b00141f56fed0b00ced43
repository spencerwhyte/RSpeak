package com.example.android_rspeak_v1.fragments;

import java.util.List;

import com.example.android_rspeak_v1.adapters.QuestionsAnswersArrayAdapter;
import com.example.android_rspeak_v1.database.RSpeakSQLiteHelper;
import com.example.android_rspeak_v1.database.Thread;
import com.example.android_rspeak_v1.database.ThreadsDataSource;
import com.example.android_rspeak_v1.fragments.QuestionsAnswersListFragment.ThreadOrigin;

import android.os.Bundle;
import android.support.v4.app.Fragment;

public class BrowseConversationFragment extends Fragment
{
	public static final BrowseConversationFragment newInstance( String thread_id )
	{
		BrowseConversationFragment qa_fragment = new BrowseConversationFragment();
		Bundle bundle = new Bundle(1);
		bundle.putInt( "THREAD ORIGIN", origin.ordinal() );
		qa_fragment.setArguments( bundle );
		return qa_fragment;
	}
	
	@Override
	public void onActivityCreated(Bundle savedInstanceState)
	{
		super.onActivityCreated(savedInstanceState);
		
		List<Thread> threads;
		threadOrigin = ThreadOrigin.values()[ getArguments().getInt("THREAD ORIGIN") ];
				
		RSpeakSQLiteHelper dbHelper = new RSpeakSQLiteHelper( getActivity() );
        ThreadsDataSource threadsDataSource = new ThreadsDataSource( getActivity(), dbHelper );
        threadsDataSource.open();
        
        //dbHelper.fillDatabase();
		
		if ( threadOrigin == ThreadOrigin.LOCAL )
		{
			threads = threadsDataSource.getLocallyAskedThreads();
		}
		else // if ( threadOrigin == ThreadOrigin.FOREIGN )
		{
			threads = threadsDataSource.getForeignAskedThreads();
		}
				
		threadsArray = threads.toArray( new Thread[ threads.size() ] );
		     
		QuestionsAnswersArrayAdapter qa_adapter = new QuestionsAnswersArrayAdapter( getActivity(), threadsArray );
  		
        setListAdapter( qa_adapter );
     }
}
