package com.example.android_rspeak_v1.activities;

import java.util.Locale;

import com.example.android_rspeak_v1.R;
import com.example.android_rspeak_v1.adapters.QuestionsAnswersPagerAdapter;
import com.example.android_rspeak_v1.database.RSpeakSQLiteHelper;
import com.example.android_rspeak_v1.fragments.QuestionsAnswersListFragment;
import com.example.android_rspeak_v1.fragments.QuestionsAnswersListFragment.QuestionOrigin;
import com.google.android.gms.common.ConnectionResult;
import com.google.android.gms.common.GooglePlayServicesUtil;

import android.support.v7.app.ActionBarActivity;
import android.support.v7.app.ActionBar;
import android.support.v4.app.Fragment;
import android.support.v4.app.FragmentManager;
import android.support.v4.app.FragmentTransaction;
import android.support.v4.app.FragmentPagerAdapter;
import android.content.Intent;
import android.content.SharedPreferences;
import android.os.Bundle;
import android.support.v4.view.ViewPager;
import android.util.Log;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.widget.Button;

public class BrowseQuestionsAnswersActivity extends ActionBarActivity implements ActionBar.TabListener 
{
	private final static int PLAY_SERVICES_RESOLUTION_REQUEST = 9000;

	QuestionsAnswersPagerAdapter mSectionsPagerAdapter;
    ViewPager mViewPager;

    @Override
    protected void onCreate(Bundle savedInstanceState) 
    {
        super.onCreate(savedInstanceState);
        setContentView( R.layout.activity_browse_questions_answers );
        
        // check if this app instance already has a play services ID
        SharedPreferences device_properties = getApplicationContext().getSharedPreferences( "DEVICE_PROPERTIES", 0 );
        String device_id = device_properties.getString( "device_id", null );
        
        if ( device_id == null )
        {
        	// first check if this device's version matches the Play requirements
        	if ( checkPlayServices() )
        	{
        		
        	}
        	
        }

        // Set up the action bar.
        final ActionBar actionBar = getSupportActionBar();
        actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_TABS);

        // Create the adapter that will return a fragment for each of the three
        // primary sections of the activity.
        mSectionsPagerAdapter = new QuestionsAnswersPagerAdapter( getSupportFragmentManager(), this );

        // Set up the ViewPager with the sections adapter.
        mViewPager = (ViewPager) findViewById(R.id.pager);
        mViewPager.setAdapter(mSectionsPagerAdapter);

        // When swiping between different sections, select the corresponding
        // tab. We can also use ActionBar.Tab#select() to do this if we have
        // a reference to the Tab.
        mViewPager.setOnPageChangeListener(new ViewPager.SimpleOnPageChangeListener() {
            @Override
            public void onPageSelected(int position) {
                actionBar.setSelectedNavigationItem(position);
            }
        });
        
        // For each of the sections in the app, add a tab to the action bar.
        for (int i = 0; i < mSectionsPagerAdapter.getCount(); i++) {
            // Create a tab with text corresponding to the page title defined by
            // the adapter. Also specify this Activity object, which implements
            // the TabListener interface, as the callback (listener) for when
            // this tab is selected.
            actionBar.addTab(
                    actionBar.newTab()
                            .setText(mSectionsPagerAdapter.getPageTitle(i))
                            .setTabListener(this));
        }
        
        // add event handler for click on 'ask question' button
        Button ask_button = (Button) this.findViewById( R.id.ask_button );
        ask_button.setOnClickListener( new View.OnClickListener() 
        {
            
			@Override
			public void onClick(View v) 
			{			
				// start the ask question activity: it has the text field for the question
				Intent intent = new Intent( BrowseQuestionsAnswersActivity.this, AskQuestionActivity.class );
			    startActivity(intent); 
			}
		});
    }


    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        
        // Inflate the menu; this adds items to the action bar if it is present.
        getMenuInflater().inflate(R.menu.browse_questions_answers, menu);
        return true;
    }

    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        // Handle action bar item clicks here. The action bar will
        // automatically handle clicks on the Home/Up button, so long
        // as you specify a parent activity in AndroidManifest.xml.
        int id = item.getItemId();
        if (id == R.id.action_settings) {
            return true;
        }
        return super.onOptionsItemSelected(item);
    }

    @Override
    public void onTabSelected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {
        // When the given tab is selected, switch to the corresponding page in
        // the ViewPager.
        mViewPager.setCurrentItem(tab.getPosition());
        
    }

    @Override
    public void onTabUnselected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {
    }

    @Override
    public void onTabReselected(ActionBar.Tab tab, FragmentTransaction fragmentTransaction) {
    }
    
    private boolean checkPlayServices() 
    {
        int resultCode = GooglePlayServicesUtil.isGooglePlayServicesAvailable( this );
        if ( resultCode != ConnectionResult.SUCCESS ) 
        {
            if ( GooglePlayServicesUtil.isUserRecoverableError( resultCode )) 
            {
                GooglePlayServicesUtil.getErrorDialog( resultCode, this,
                        PLAY_SERVICES_RESOLUTION_REQUEST ).show();
            } 
            else 
            {
                Log.i( "notification", "This device is not supported." );
                finish();
            }
            return false;
        }
        return true;
    }
}
